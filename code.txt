const express = require("express");
const mongoose = require("mongoose");

const http = require("http");
const app = express();
const PORT = 3000;

app.use(express.json());

mongoose
  .connect(
    "mongodb+srv://literalshit3:6heVGfgvUbvo0NIT@cluster0.n8iwve9.mongodb.net/"
  )
  .then(() => {
    console.log("Connected to MongoDB");
  })
  .catch((err) => {
    console.error("MongoDB connection error:", err);
  });

const userSchema = new mongoose.Schema({
  username: String,
  password: String,
});
const msgSchema = new mongoose.Schema({
  sender: String,
  receiver: String,
  message: String,
});

const User = mongoose.model("User", userSchema);
const Message = mongoose.model("Message", msgSchema);

function helloWorld(req, res) {
  res.json("Hello, world");
}

async function sendMessage(req, res) {
  const { sender, receiver, message } = req.body;
  console.log("Received message:", { sender, receiver, message });
  const newMessage = new Message({ sender, receiver, message });
  await newMessage.save();
  return res.json(newMessage);
}

async function receiveMessage(req, res) {
  const { sender, receiver } = req.query;
  const data = await Message.find({ $or: [{ sender, receiver }, { sender: receiver, receiver: sender }] });
  return res.json(data);
}

async function login(req, res) {
  const { username, password } = req.body;
  const existinguser = await User.findOne({ username });
  if (existinguser != null) {
    if (existinguser.password === password) {
      return res.json({ message: "Login successful" });
    }
    return res.status(400).json({ error: "Invalid credentials" });
  }
  const newUser = new User({ username, password });
  newUser.save();
  return res.json({ message: "User registered successfully" });
}

async function getUsers(req, res) {
  const users = await User.find();
  return res.json(users);
}

app.post("/login", login);
app.get("/", helloWorld);

app.get("/user", getUsers);
app.post("/send-message", sendMessage);
app.get("/receive", receiveMessage);

const server = http.createServer(app);

server.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});
